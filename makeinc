#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#
#    This file is part of ICTP RegCM.
#    
#    Use of this source code is governed by an MIT-style license that can
#    be found in the LICENSE file or at
#
#         https://opensource.org/licenses/MIT.
#
#    ICTP RegCM is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

tag := $(REGCM_ROOT)/tag

$(REGCM_ROOT)/version :
	@cd $(REGCM_ROOT) && $(shell \
            [ -f $(tag) ] && cat $(tag) > $@ || \
            git describe --abbrev=4 --dirty --always --tags > $@)

GIT_VERSION := $(shell cat $(REGCM_ROOT)/version)

GITVER := -DGIT_VER=\"$(GIT_VERSION)\"

# CLM45 flags to activate schemes.

ifeq ($(findstring DCLM45, $(CPPFLAGS)),DCLM45)
  #CPPFLAGS += $(DEFINE)CENTURY_DECOMP
  #CPPFLAGS += $(DEFINE)CN
  #CPPFLAGS += $(DEFINE)DYNPFT
  #CPPFLAGS += $(DEFINE)CNDV
  #CPPFLAGS += $(DEFINE)CROP
  #CPPFLAGS += $(DEFINE)LCH4
  #CPPFLAGS += $(DEFINE)NITRIF_DENITRIF
  #CPPFLAGS += $(DEFINE)EXTRALAKELAYERS
  #CPPFLAGS += $(DEFINE)MEXICOCITY
  #CPPFLAGS += $(DEFINE)PERGRO
  #CPPFLAGS += $(DEFINE)SNICAR_FRC
  #CPPFLAGS += $(DEFINE)VERTSOILC
  #CPPFLAGS += $(DEFINE)VANCOUVER
  #CPPFLAGS += $(DEFINE)VICHYDRO
endif

#CPPFLAGS += $(DEFINE)RCEMIP

space :=
space +=

fortflag := -D_FORTIFY_SOURCE=2
scppfla := $(filter-out $(fortflag),$(CPPFLAGS))
scppfla := $(filter-out $(DEFINE)VICHYDRO,$(scppfla))
scppfla := $(filter-out $(DEFINE)USE_MPI3,$(scppfla))
scppfla := $(filter-out $(DEFINE)F2008,$(scppfla))
scppfla := $(filter-out $(DEFINE)QUAD_PRECISION,$(scppfla))
scppfla := $(filter-out $(DEFINE)MPI_SERIAL,$(scppfla))
scppfla := $(filter-out $(DEFINE)NETCDF_CDF5,$(scppfla))
scppfla := $(filter-out $(DEFINE)NETCDF4_COMPRESS,$(scppfla))
scppfla := $(filter-out $(DEFINE)NETCDF4_HDF5,$(scppfla))
scppfla := $(filter-out $(DEFINE)PNETCDF_IN_NETCDF,$(scppfla))
scppfla := $(filter-out $(DEFINE)PNETCDF,$(scppfla))
scppfla := $(filter-out $(DEFINE)SKL,$(scppfla))
scppfla := $(filter-out $(DEFINE)NCFILTERS_AVAIL,$(scppfla))
scppfla := $(strip $(scppfla))
flagsuffix := $(subst $(space),_,$(subst $(DEFINE),,$(filter $(DEFINE)% , $(scppfla))))

program_transform_name := s&$$&$(rcsuffix)$(flagsuffix:_=)&
